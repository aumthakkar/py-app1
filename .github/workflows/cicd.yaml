name: ci
on:
  push:
    paths:
      - src/**
    branches:
      - main     

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Shorten github commit_id
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> ${GITHUB_ENV}
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: aumthakkar/py-app1:${{ env.COMMIT_ID }}
    
    outputs:
        commit_id: ${{ env.COMMIT_ID}}   
        
  cd:
    needs: ci
    runs-on: self-hosted
    steps:
      - 
        name: Clone your github repo
        uses: actions/checkout@v3 

      - 
        name: Update the values file from Helm chart to have the right tag
        shell: bash
        run: |
          echo "${{ needs.ci.outputs.commit_id }}"
          pip install yq
          yq -Yi '.image.tag = "${{ needs.ci.outputs.commit_id }}"' charts/py-app1/values.yaml

      - 
        name: Commit the change
        uses: EndBug/add-and-commit@v9
        with:
          message: 'replace the values.yaml file image tag with ${{ needs.ci.outputs.commit_id }}'

      - 
        name: Install ArgoCD application on the runner
        shell: bash
        run: |
          curl -ksSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv ./argocd /usr/local/bin/argocd

      - 
        name: Login to ArgoCD and Sync the app
        shell: bash
        run: |
          argocd login argocd-server.argocd \
          --insecure \
          --grpc-web \
          --username admin \
          --password ${{ secrets.ARGOCD_PASSWORD }}
        
      - name: ArgoCD App create
        shell: bash
        run: |
          argocd app get py-app1 || argocd app create py-app1 \
          --dest-namespace py-app1 \
          --dest-server https://kubernetes.default.svc \
          --project default \
          --revision main \
          --sync-option CreateNamespace=true \
          --sync-policy manual \
          --repo https://github.com/aumthakkar/py-app1.git \
          --path charts/py-app1 \
          --values values.yaml
      
      - name: ArgoCD app sync
        shell: bash
        run: | 
          argocd app sync py-app1
          argocd app wait py-app1 --timeout 180

      
    
